{"version":3,"sources":["../../src/errors/LatticeBaseError.js"],"names":["LatticeBaseError","Error","constructor","messageOrError","fileName","lineNumber","message","error"],"mappings":";;;;;AAAA;;;;;AAKA;;;;;;;AAOO,MAAMA,gBAAN,SAA+BC,KAA/B,CAAqC;;AAU1C;;;;;;;;;;;;;;;;;;;AAmBAC,cACEC,cADF,EAEEC,QAFF,EAGEC,UAHF,EAIE;AACA,UACIF,kBAAkBA,eAAeG,OAAlC,IAA8CH,cADjD,EAEIA,kBAAkBA,eAAeC,QAAlC,IAA+CA,QAFlD,EAGID,kBAAkBA,eAAeE,UAAlC,IAAiDA,UAHpD;;AAMA,QAAIF,0BAA0BF,KAA9B,EAAqC;AACnC,WAAKM,KAAL,GAAaJ,cAAb;AACD;AACF;AA1CD;;;;;;;AAD0C;;QAA/BH,gB,GAAAA,gB;kBA8CEA,gB","file":"LatticeBaseError.js","sourceRoot":"src","sourcesContent":["/**\n * @module Core\n * @flow\n */\n\n/**\n * The base error class used in GraphQL Lattice Core. All Lattice Error\n * classes extend from this class. They allow a shared interface for\n * working with and defining new errors. Lattice Errors deviate from\n * the base JavaScript Error class in that a LatticeError can wrap an\n * existing Error and assume its properties.\n */\nexport class LatticeBaseError extends Error {\n  /**\n   * The optionally wrapped `Error` instance supplied to the constructor\n   * upon creation.\n   *\n   * @type Class<Error>\n   * @since 3.0.0\n   */\n  error: Class<Error>\n\n  /**\n   * Creates a new Error object instance. If the supplied message value is\n   * another `Error` instance, its data and values are used to prepopulate\n   * the new instance.\n   *\n   * @constructor\n   * @instance\n   * @since 3.0.0\n   *\n   * @param {string|Class<Error>|void} messageOrError if an Error class rather\n   * than a string or undefined, the supplied Error class is used to provide\n   * the fileName and lineNumber.\n   * @param {?string} fileName Optional. The value for the `fileName` property\n   * on the created `Error` object. Defaults to the name of the file containing\n   * the code that called the `Error()` constructor.\n   * @param {?string|?number} lineNumber Optional. The value for the\n   * `lineNumber` property on the created `Error` object. Defaults to the line\n   * number containing the `Error()` constructor invocation.\n   */\n  constructor(\n    messageOrError: ?string | ?Class<Error>,\n    fileName: ?string,\n    lineNumber: ?string | ?number\n  ) {\n    super(\n      ((messageOrError && messageOrError.message) || messageOrError),\n      ((messageOrError && messageOrError.fileName) || fileName),\n      ((messageOrError && messageOrError.lineNumber) || lineNumber)\n    )\n\n    if (messageOrError instanceof Error) {\n      this.error = messageOrError\n    }\n  }\n}\n\nexport default LatticeBaseError\n"]}