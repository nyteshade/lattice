{"version":3,"sources":["../../es6/errors/FunctionExecutionError.js"],"names":["FunctionExecutionError","Error","constructor","error","fn","args","result","message","columnNumber","fileName","lineNumber","name","stack"],"mappings":";;;;;;;;;;;;;AAAA;;;;IAIaA,sB,WAAAA,sB,GAAN,MAAMA,sBAAN,SAAqCC,KAArC,CAA2C;;AAahD;;;;;;;;;;;;;;AANA;;AANA;AAwBAC,cACEC,KADF,EAEEC,EAFF,EAGEC,IAHF,EAIEC,MAJF,EAKE;AACA,QAAIC,UAAUJ,iBAAiBF,KAAjB,GAAyBE,MAAMI,OAA/B,GAAyCJ,KAAvD;;AAEA,UAAMI,OAAN;;AAEA,QAAIJ,iBAAiBF,KAArB,EAA4B;AAC1B,UAAI,EAAEO,YAAF,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCH,OAAtC,EAA+CI,IAA/C,EAAqDC,KAArD,KAA+DT,KAAnE;;AAEA,4BAAc,IAAd,EAAoB;AAClBK,oBADkB,EACJC,QADI,EACMC,UADN,EACkBH,OADlB,EAC2BI,IAD3B,EACiCC;AADjC,OAApB;;AAIA,WAAKT,KAAL,GAAaA,KAAb;AACD;;AAED,0BAAc,IAAd,EAAoB,EAAEA,KAAF,EAASC,EAAT,EAAaC,IAAb,EAAmBC,MAAnB,EAApB;AACD;;AApCD;;;AANA;AAJgD,C;kBAiDnCN,sB","file":"FunctionExecutionError.js","sourceRoot":"es6","sourcesContent":["/**\n * The FunctionExecutionError denotes that the error was invoked\n * during a runtime evaluation of a function\n */\nexport class FunctionExecutionError extends Error {\n  /** The error, if any, that prompted the creation of this instance */\n  error: Error\n\n  /** The function in question, if available, that caused the error */\n  fn: Function\n\n  /** The arguments, if available, that invoked the error */\n  args: Array<Mixed>\n\n  /** The result from the function, if any, at the time of Error */\n  result: mixed\n\n  /**\n   * Creates a new FunctionExecutionError instance. Any information that\n   * can be passed about the error at the time of failure should be captured\n   * here if possible. Some values that make sense are any other existing\n   * error present at the time this issue cropped up, the function that failed,\n   * any arguments passed to it and any resulting value it may have turned up.\n   *\n   * @param  {Error|string} error any error present at the time of failure\n   * @param  {Function} fn the function that failed\n   * @param  {Array<mixed>} args any arguments passed to the failed fn\n   * @param  {mixed} result any result returned by the failed function\n   */\n  constructor(\n    error: ?(Error | string),\n    fn: ?Function,\n    args: ?Array<mixed>,\n    result: mixed\n  ) {\n    let message = error instanceof Error ? error.message : error\n\n    super(message)\n\n    if (error instanceof Error) {\n      let { columnNumber, fileName, lineNumber, message, name, stack } = error\n\n      Object.assign(this, {\n        columnNumber, fileName, lineNumber, message, name, stack\n      })\n\n      this.error = error\n    }\n\n    Object.assign(this, { error, fn, args, result })\n  }\n}\n\nexport default FunctionExecutionError"]}